git and github workflow
remote repositry 
the most populer player is github , some other name are gitlab ,gitbucket, etc 

To connect local repo with remote repo 

…or create a new repository on the command line
echo "# gitclass" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/MarkofHephaestus/gitclass.git
git push -u origin main

--------------------------
git diff 
git status 

--------------------------------------

--to bring the remote file on your local machine 
git clone https://github.com/MarkofHephaestus/gitclass.git
the copy on your local machine will be done in the folder that you are on 


…or push an existing repository from the command line
git remote add origin https://github.com/MarkofHephaestus/gitclass.git
git branch -M main
git push -u origin main

--origin means the link is saved now with the name origin in our local system. WE can can reference the same using the same name. We can name it apne hisab se bhi but the conevntion is origin.


to check if remote add hua hai etc 
$ git remote -v
 It will give something like 
origin  https://github.com/MarkofHephaestus/gitclass.git (fetch)
origin  https://github.com/MarkofHephaestus/gitclass.git (push)


-push means local ko push karta hai on remote 
-and fetch means github se bas metadata comes . It means we wil get to know the changes happening but we are not merging it in the local repo 





------------------branches--------------
git checkout -b "branch name"
creates a branch and switches to that branch as well 


Push the local branch to the remote repository (i.e. publish), but make it trackable so that git pull and git push will work.

git checkout "branchname"
eg:- git checkout main 
to switch btw branches


-----------conflicts----------
conflicts arrise while merging 
main branch mein a+b=8
new branch mein a+b=9

then if we merge the two branches then conflicts will arise 
then we can just open the file by notepad "filename"
then file mein head and end etc likha aa we can keep the code we want to and remove the extra stuff added like head and end 


there are tools to  compare the two codes when conflicts occur as comparing them line to line is just stoopido 
example- extensions hote hai vs par bhi github ke (search )


--------------------Triggers---------------
.git folder
it basically keeps the metadata 
in it there is a folder called hooks
in it we have a lot of files that are used to set triggers 
as soon as we commit the code , the trigger will work.i.e the code that we wrote in these files will automatically work 
(	search hooks 	)
in these files we have filename.sample meaning those files wont run, if we remove .sample then they will run as soon as we commit 



Shell Scripting?



-------------------------------------------------------
( pull- jo fork kari hai usse changes ayenge
upstream- original repo se link karte hai apni local repo se )

-git remote add upstream <original repo url>
it adds a link to the original repo 

- git remote -v
to see the changes and upstream and origin etc konsa set hai 


-git fetch upstream
-git merge upstream/main
It means it will bring the changes from the upstream(original repo) directly to your local repo on your system 

-git pull upstream main 
its work is the same as the above two commands but bas ek command se 

(to exit vm - :q )
---------------


- .gitignore
ignores files that are not needed while adding (while tracking)
method is to create a file .gitignore 
add the names of the file in the file 
we can also add folder names in the file, those files/folders will not be added in the staging area and stay on the local system only.